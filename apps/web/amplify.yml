version: 1
applications:
  - appRoot: apps/web
    env:
      variables:
        #AMPLIFY_DIFF_DEPLOY: true
    backend:
      phases:
        build:
          commands:
            - echo BACKEND BUILD
            # We back out, copy the amplify config before build, move it into the monorepo root and call it a day.
            # We do this for all amplify envs as long as we deploy in a monorepo.
            # You might be asking "Why?" Well i'm sick of #current-backend bitching about missing deps so I made amplify it's own package and then I realized all
            # future packages should do the same and they can be copied to the projects they need to be copied to.
            - cd ../../
            - cd amplify
            - mv web/ ../apps/web/
            - cd ../
            - cd apps/web/
            - export NODE_OPTIONS="--max-old-space-size=8192"
            - amplifyPush --simple
    frontend:
      phases:
        preBuild:
          commands:
            - echo FRONTEND PREBUILD
            - cd ../../
            # We don't need to move folders, we already moved out to the root at the backend build step.
            - nvm install 16.15.1
            - nvm use 16.15.1
            - node -v
            - export NODE_OPTIONS=--max-old-space-size=8192
            - npm ci
        build:
          commands:
            - echo FRONTEND BUILD
            # - aws s3 cp amplify.yml s3://fox-sandbox/public/
            # - yarn amplify:clean:current-backend
            - npm run build
            - cd apps/web
            # This step is for some custom serverless config options.
            # Modifying the headers from serverless works.
            - cp serverless/serverless.yml serverless.yml
            # - aws s3 cp serverless.yml s3://fox-sandbox/public/
        postBuild:
          commands:
            - ls
      artifacts:
        baseDirectory: .next
        files:
          - '**/*'
      cache:
        paths:
          - ../node_modules/.cache/turbo
          - node_modules/**/*
